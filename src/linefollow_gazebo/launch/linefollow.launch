<?xml version="1.0"?>
<launch>
  <arg name="model" default="$(find prius_description)/urdf/prius.urdf"/>
  <arg name="rvizconfig" default="$(find linefollow_gazebo)/rviz/demo.rviz" />
  <arg name="rviz" default="true" />
  <arg name="gazebo_gui" default="false" />


  <!-- For spawning camera according to needed parameters that have to be set at launch time-->
  <arg name="horizontal_fov" default="1.547" />
  <arg name="width_resolution" default="300" />
  <arg name="height_resolution" default="300" />

  <!--<arg name="camera" default="$(find linefollow_gazebo)/urdf/single_camera.urdf" />-->

  <param name="robot_description" textfile="$(arg model)"/>

  <!-- Generate URDF from Xacro-parametrized model -->
  <param name="camera_description" command="xacro --inorder '$(find linefollow_gazebo)/urdf/single_camera.urdf.xacro' horizontal_fov:=$(arg horizontal_fov) width_resolution:=$(arg width_resolution) height_resolution:=$(arg height_resolution)" />

  <!-- We resume the logic in empty_world.launch, changing only the name of the world to be launched -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find linefollow_gazebo)/worlds/linefollow.world"/>
    <arg name="use_sim_time" value="true"/>
    <arg name="gui" value="$(arg gazebo_gui)"/>
  </include>

  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" >
    <!-- <remap from="robot_description" to="different_robot_description" /> -->
    <!-- <remap from="joint_states" to="/prius/joint_states" /> -->
  </node>

  <node pkg="tf2_ros" type="static_transform_publisher" name="very_inaccurate_odom" args="0 0 0 0 0 0 odom base_link"/>

  <!-- this is just to satisfy my curiosity. Problem solved by setting odom equal to map coordinates in the first place -->:
  <node pkg="tf2_ros" type="static_transform_publisher" name="world_pos" args="0 0 0 0 0 0 map odom"/>

  <node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" args="-param robot_description -urdf -x 0 -y 0 -z 0.0 -model prius"/>
  <node name="spawn_urdf_camera" pkg="gazebo_ros" type="spawn_model" args="-param camera_description -urdf -model camera" />-->

  <group if="$(arg rviz)">
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(arg rvizconfig)" required="true" />
  </group>

  <node pkg="linefollow_gazebo" type="line_follow.py" name="line_follow_py" required="true"/>
  <node pkg="linefollow_gazebo" type="EKF.py" name="ekf_positioning" />
  <node pkg="linefollow_gazebo" type="CameraNetwork.py" name="camera_network" />


</launch>
